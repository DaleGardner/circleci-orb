description: >
  A single complete job to run Cypress end-to-end tests in your project.
# What will this job do?

executor: default

parameters:
  post-install:
    description: >
      Additional commands to run after running install
      but before verifying Cypress and saving cache.
    type: steps
    default: []
  install-command:
    description: Overrides the default NPM command (npm ci)
    type: string
    default: ''
  cache-key:
    description: Npm cache key used to cache Cypress and it's dependencies
    type: string
    default: 'cache-{{ arch }}-{{ checksum "package.json" }}'
  working-directory:
    description: Directory containing package.json
    type: string
    default: ''
  pkg-manager:
    type: enum
    enum: ['npm', 'yarn', 'yarn-berry']
    default: 'npm'
    description: Select the default node package manager to use. NPM v5+ Required.

steps:
  - checkout
  - run:
      name: "List Working Directory"
      command: ls -l
  - node/install-packages:
      override-ci-command: << parameters.install-command >>
      app-dir: << parameters.working-directory >>
      pkg-manager: << parameters.pkg-manager >>
      


  # - restore_cache:
  #     key: << parameters.cache-key >>
  # # we can install dependencies using "npm ci" or the
  # # user-supplied "install-command".
  # - run:
  #     environment:
  #       INSTALL_COMMAND: << parameters.install-command >>
  #     name: Install
  #     working_directory: << parameters.working-directory >>
  #     command: <<include(scripts/run-install.sh)>>
  # - steps: << parameters.post-install >>
  # - when:
  #     condition:
  #       equal: [ "true", -f yarn.lock ]
  #     steps:
  #       - save_cache:
  #           key: << parameters.cache-key >>
  #           paths:
  #             - ~/.cache
  # - unless:
  #     condition:
  #       equal: [ "true", -f yarn.lock ]
  #     steps:
  #       - save_cache:
  #           key: << parameters.cache-key >>
  #           paths:
  #             - ~/.cache
  #             - ~/.npm
