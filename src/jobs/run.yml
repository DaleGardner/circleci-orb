description: >
  A single complete job to run Cypress end-to-end tests in your project.
# What will this job do?

executor: default

parameters:
  post-install:
    description: >
      Additional commands to run after running install
      but before verifying Cypress and saving cache.
    type: steps
    default: []
  install-command:
    description: Overrides the default NPM command (npm ci)
    type: string
    default: ''
  cache-key:
    description: Npm cache key used to cache Cypress and it's dependencies
    type: string
    default: 'cache-{{ arch }}-{{ checksum "package.json" }}'
  working-directory:
    description: Directory containing package.json
    type: string
    default: ''

steps:
  - checkout:
      working_directory: << parameters.working-directory >>
  - run:
      name: "List Working Directory"
      command: ls -l
  - restore_cache:
      keys:
        - << parameters.cache-key >>
  # we can install dependencies using "npm ci" or the
  # user-supplied "install-command".
  # - run:
  #     environment:
  #       INSTALL_COMMAND: << parameters.install-command >>
  #       WORKING_DIRECTORY: << parameters.working-directory >>
  #     name: Install
  #     working_directory: << parameters.working-directory >>
  #     command: <<include(scripts/run-install.sh)>>
  - when:
      condition:
        equal: [ "true", ! -z "<<parameters.install-command>>" ]
      steps:
        run:
          name: 'Custom Install'
          command: <<parameters.install-command>>
  - when:
      condition:
        equal: [ "true", -f <<parameters.working-directory>>/yarn.lock ]
      steps:
        run:
          name: 'Yarn Install'
          command: 'yarn install --frozen-lockfile'
  - when:
      condition:
        equal: [ "false", -f <<parameters.working-directory>>/package-lock.json ]
      steps:
        run:
          name: 'No Package Lock File Found'
          command: exit 1
  - unless:
      condition:
        equal: [ "false", -f <<parameters.working-directory>>/package-lock.json ]
      steps:
        run:
          name: 'Npm CI'
          command: 'npm ci'
  - steps: << parameters.post-install >>
  - when:
      condition:
        equal: [ "true", -f <<parameters.working-directory>>/yarn.lock ]
      steps:
        - save_cache:
            key: << parameters.cache-key >>
            paths:
              - ~/.cache
  - unless:
      condition:
        equal: [ "true", -f <<parameters.working-directory>>/yarn.lock ]
      steps:
        - save_cache:
            key: << parameters.cache-key >>
            paths:
              - ~/.cache
              - ~/.npm
